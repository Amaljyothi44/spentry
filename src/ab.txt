import React, { useState, useEffect } from 'react';
import { BrowserRouter as Router, Route, Routes } from 'react-router-dom';
import axios from 'axios';

axios.defaults.xsrfCookieName = 'csrftoken';
axios.defaults.xsrfHeaderName = 'X-CSRFToken';
axios.defaults.withCredentials = true;

const api = axios.create({
  baseURL: 'http://127.0.0.1:8000',
});

function App() {
  const [currentUser, setCurrentUser] = useState(null);
  const [email, setEmail] = useState('');
  const [username, setUsername] = useState('');
  const [password, setPassword] = useState('');

  useEffect(() => {
    checkUserAuthentication();
  }, []);

  const checkUserAuthentication = () => {
    api
      .get('/api/user')
      .then(() => {
        setCurrentUser(true);
      })
      .catch(() => {
        setCurrentUser(false);
      });
  };

  const handleRegistration = (e) => {
    e.preventDefault();
    api
      .post('/api/register', {
        email,
        username,
        password,
      })
      .then(() => {
        handleLogin();
      });
  };

  const handleLogin = (e) => {
    if (e) {
      e.preventDefault();
    }
    api
      .post('/api/login', {
        email,
        password,
      })
      .then(() => {
        checkUserAuthentication();
      });
  };

  const handleLogout = (e) => {
    e.preventDefault();
    api.post('/api/logout').then(() => {
      setCurrentUser(false);
    });
  };

  if (currentUser === null) {
    // Authentication status is being checked
    return null; // You can show a loading spinner here
  }

  return (
    <div className="App">
      <Router>
        {/* Routes */}
        <Routes>
          <Route path="/" element={<Home />} />
          <Route path="/income" element={<Income />} />
          <Route path="/chart" element={<Chart />} />
          <Route path="/notes" element={<Notes />} />
          <Route path="/goal" element={<Goal />} />
          <Route path="/settings" element={<Settings />} />
        </Routes>

        {/* Navbar */}
        <Navbar />

        {/* Authenticated Content */}
        {currentUser ? (
          <div>
            <form onSubmit={handleLogout}>
              <button type="submit">Log out</button>
            </form>
          </div>
        ) : (
          // Non-authenticated Content
          <div>
            <button onClick={handleRegistration}>Register</button>
            <div className="login-container">
              <form className="login-form" onSubmit={handleLogin}>
                {/* Login form fields */}
              </form>
            </div>
          </div>
        )}
      </Router>
    </div>
  );
}

export default App;


 useEffect(() => {
    const fetchData = async () => {
      try {
        const response = await client.get('/api/user');
        const { username } = response.data.user;
        setUsername(username);
      } catch (error) {
        console.error('Error fetching data:', error);
      }
    };

    fetchData();
  }, []);